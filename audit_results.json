{"database":{"advisory-count":802,"last-commit":"20a8af2bdc91ffaa99fed197adf0e40c0e8c5edd","last-updated":"2025-09-02T13:05:02+02:00"},"lockfile":{"dependency-count":774},"settings":{"target_arch":[],"target_os":[],"severity":null,"ignore":[],"informational_warnings":["unmaintained","unsound","notice"]},"vulnerabilities":{"found":true,"count":4,"list":[{"advisory":{"id":"RUSTSEC-2024-0421","package":"idna","title":"`idna` accepts Punycode labels that do not produce any non-ASCII when decoded","description":"`idna` 0.5.0 and earlier accepts Punycode labels that do not produce any non-ASCII output, which means that either ASCII labels or the empty root label can be masked such that they appear unequal without IDNA processing or when processed with a different implementation and equal when processed with `idna` 0.5.0 or earlier.\n\nConcretely, `example.org` and `xn--example-.org` become equal after processing by `idna` 0.5.0 or earlier. Also, `example.org.xn--` and `example.org.` become equal after processing by `idna` 0.5.0 or earlier.\n\nIn applications using `idna` (but not in `idna` itself) this may be able to lead to privilege escalation when host name comparison is part of a privilege check and the behavior is combined with a client that resolves domains with such labels instead of treating them as errors that preclude DNS resolution / URL fetching and with the attacker managing to introduce a DNS entry (and TLS certificate) for an `xn--`-masked name that turns into the name of the target when processed by `idna` 0.5.0 or earlier.\n\n## Remedy\n\nUpgrade to `idna` 1.0.3 or later, if depending on `idna` directly, or to `url` 2.5.4 or later, if depending on `idna` via `url`. (This issue was fixed in `idna` 1.0.0, but versions earlier than 1.0.3 are not recommended for other reasons.)\n\nWhen upgrading, please take a moment to read about [alternative Unicode back ends for `idna`](https://docs.rs/crate/idna_adapter/latest).\n\nIf you are using Rust earlier than 1.81 in combination with SQLx 0.8.2 or earlier, please also read an [issue](https://github.com/servo/rust-url/issues/992) about combining them with `url` 2.5.4 and `idna` 1.0.3.\n\n## Additional information\n\nThis issue resulted from `idna` 0.5.0 and earlier implementing the UTS 46 specification literally on this point and the specification having this bug. The specification bug has been fixed in [revision 33 of UTS 46](https://www.unicode.org/reports/tr46/tr46-33.html#Modifications).\n\n## Acknowledgements\n\nThanks to kageshiron for recognizing the security implications of this behavior.","date":"2024-12-09","aliases":["CVE-2024-12224"],"related":[],"collection":"crates","categories":["privilege-escalation"],"keywords":["idna","punycode","same-origin","domain-name"],"cvss":null,"informational":null,"references":[],"source":null,"url":"https://bugzilla.mozilla.org/show_bug.cgi?id=1887898","withdrawn":null,"license":"CC0-1.0"},"versions":{"patched":[">=1.0.0"],"unaffected":[]},"affected":null,"package":{"name":"idna","version":"0.4.0","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":"7d20d6b07bfbc108882d88ed8e37d39636dcc260e15e30c45e6ba089610b917c","dependencies":[{"name":"unicode-bidi","version":"0.3.18","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"unicode-normalization","version":"0.1.24","source":"registry+https://github.com/rust-lang/crates.io-index"}],"replace":null}},{"advisory":{"id":"RUSTSEC-2024-0437","package":"protobuf","title":"Crash due to uncontrolled recursion in protobuf crate","description":"Affected version of this crate did not properly parse unknown fields when parsing a user-supplied input.\n\nThis allows an attacker to cause a stack overflow when parsing the mssage on untrusted data.","date":"2024-12-12","aliases":[],"related":["GHSA-735f-pc8j-v9w8"],"collection":"crates","categories":["denial-of-service"],"keywords":["panic"],"cvss":null,"informational":null,"references":[],"source":null,"url":"https://github.com/stepancheg/rust-protobuf/issues/749","withdrawn":null,"license":"CC0-1.0"},"versions":{"patched":[">=3.7.2"],"unaffected":[]},"affected":{"arch":[],"os":[],"functions":{"protobuf::coded_input_stream::CodedInputStream::skip_group":["<=3.4.0"]}},"package":{"name":"protobuf","version":"2.28.0","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":"106dd99e98437432fed6519dedecfade6a06a73bb7b2a1e019fdd2bee5778d94","replace":null}},{"advisory":{"id":"RUSTSEC-2025-0009","package":"ring","title":"Some AES functions may panic when overflow checking is enabled.","description":"`ring::aead::quic::HeaderProtectionKey::new_mask()` may panic when overflow\nchecking is enabled. In the QUIC protocol, an attacker can induce this panic by\nsending a specially-crafted packet. Even unintentionally it is likely to occur\nin 1 out of every 2**32 packets sent and/or received.\n\nOn 64-bit targets operations using `ring::aead::{AES_128_GCM, AES_256_GCM}` may\npanic when overflow checking is enabled, when encrypting/decrypting approximately\n68,719,476,700 bytes (about 64 gigabytes) of data in a single chunk. Protocols\nlike TLS and SSH are not affected by this because those protocols break large\namounts of data into small chunks. Similarly, most applications will not\nattempt to encrypt/decrypt 64GB of data in one chunk.\n\nOverflow checking is not enabled in release mode by default, but\n`RUSTFLAGS=\"-C overflow-checks\"` or `overflow-checks = true` in the Cargo.toml\nprofile can override this. Overflow checking is usually enabled by default in\ndebug mode.","date":"2025-03-06","aliases":[],"related":[],"collection":"crates","categories":["denial-of-service"],"keywords":[],"cvss":null,"informational":null,"references":[],"source":null,"url":"https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05","withdrawn":null,"license":"CC0-1.0"},"versions":{"patched":[">=0.17.12"],"unaffected":[]},"affected":null,"package":{"name":"ring","version":"0.16.20","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":"3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc","dependencies":[{"name":"cc","version":"1.2.33","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"libc","version":"0.2.175","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"once_cell","version":"1.21.3","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"spin","version":"0.5.2","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"untrusted","version":"0.7.1","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"web-sys","version":"0.3.77","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"winapi","version":"0.3.9","source":"registry+https://github.com/rust-lang/crates.io-index"}],"replace":null}},{"advisory":{"id":"RUSTSEC-2025-0055","package":"tracing-subscriber","title":"Logging user input may result in poisoning logs with ANSI escape sequences","description":"Previous versions of tracing-subscriber were vulnerable to ANSI escape sequence injection attacks. Untrusted user input containing ANSI escape sequences could be injected into terminal output when logged, potentially allowing attackers to:\n\n- Manipulate terminal title bars\n- Clear screens or modify terminal display\n- Potentially mislead users through terminal manipulation\n\nIn isolation, impact is minimal, however security issues have been found in terminal emulators that enabled an attacker to use ANSI escape sequences via logs to exploit vulnerabilities in the terminal emulator.\n\nThis was patched in [PR #3368](https://github.com/tokio-rs/tracing/pull/3368) to escape ANSI control characters from user input.","date":"2025-08-29","aliases":["CVE-2025-58160","GHSA-xwfj-jgwm-7wp5"],"related":[],"collection":"crates","categories":["format-injection"],"keywords":[],"cvss":null,"informational":null,"references":[],"source":null,"url":"https://github.com/advisories/GHSA-xwfj-jgwm-7wp5","withdrawn":null,"license":"CC0-1.0"},"versions":{"patched":[">=0.3.20"],"unaffected":[]},"affected":null,"package":{"name":"tracing-subscriber","version":"0.3.19","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008","dependencies":[{"name":"matchers","version":"0.1.0","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"nu-ansi-term","version":"0.46.0","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"once_cell","version":"1.21.3","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"regex","version":"1.11.1","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"sharded-slab","version":"0.1.7","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"smallvec","version":"1.15.1","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"thread_local","version":"1.1.9","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"tracing","version":"0.1.41","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"tracing-core","version":"0.1.34","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"tracing-log","version":"0.2.0","source":"registry+https://github.com/rust-lang/crates.io-index"}],"replace":null}}]},"warnings":{"unmaintained":[{"kind":"unmaintained","package":{"name":"instant","version":"0.1.13","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222","dependencies":[{"name":"cfg-if","version":"1.0.3","source":"registry+https://github.com/rust-lang/crates.io-index"}],"replace":null},"advisory":{"id":"RUSTSEC-2024-0384","package":"instant","title":"`instant` is unmaintained","description":"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\n\n[`web-time`]: https://crates.io/crates/web-time","date":"2024-09-01","aliases":[],"related":[],"collection":"crates","categories":[],"keywords":[],"cvss":null,"informational":"unmaintained","references":["https://crates.io/crates/instant/0.1.13","https://github.com/sebcrozet/instant/issues/52"],"source":null,"url":null,"withdrawn":null,"license":"CC0-1.0"},"affected":null,"versions":{"patched":[],"unaffected":[]}},{"kind":"unmaintained","package":{"name":"paste","version":"1.0.15","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a","replace":null},"advisory":{"id":"RUSTSEC-2024-0436","package":"paste","title":"paste - no longer maintained","description":"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository\n\n## Possible Alternative(s)\n\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate","date":"2024-10-07","aliases":[],"related":[],"collection":"crates","categories":[],"keywords":[],"cvss":null,"informational":"unmaintained","references":[],"source":null,"url":"https://github.com/dtolnay/paste","withdrawn":null,"license":"CC0-1.0"},"affected":null,"versions":{"patched":[],"unaffected":[]}},{"kind":"unmaintained","package":{"name":"ring","version":"0.16.20","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":"3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc","dependencies":[{"name":"cc","version":"1.2.33","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"libc","version":"0.2.175","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"once_cell","version":"1.21.3","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"spin","version":"0.5.2","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"untrusted","version":"0.7.1","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"web-sys","version":"0.3.77","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"winapi","version":"0.3.9","source":"registry+https://github.com/rust-lang/crates.io-index"}],"replace":null},"advisory":{"id":"RUSTSEC-2025-0010","package":"ring","title":"Versions of *ring* prior to 0.17 are unmaintained.","description":"*ring* 0.16.20 was released over 4 years ago and isn't maintained, tested, etc.\n\nAdditionally, the project's general policy is to only patch the latest release,\nwhich is 0.17.12 now. It will be difficult for anybody to backport future fixes\nto versions earlier than 0.17.10 due to license changes.","date":"2025-03-05","aliases":[],"related":[],"collection":"crates","categories":[],"keywords":[],"cvss":null,"informational":"unmaintained","references":[],"source":null,"url":"https://github.com/briansmith/ring/discussions/2450","withdrawn":null,"license":"CC0-1.0"},"affected":null,"versions":{"patched":[],"unaffected":[">=0.17"]}}]}}