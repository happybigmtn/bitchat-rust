# BitCraps Helm Chart Values
# Default configuration for production deployment

# Deployment configuration
replicaCount: 3
image:
  repository: ghcr.io/bitcraps/bitchat-rust
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Container security context
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

# Service configuration
service:
  type: LoadBalancer
  ports:
    http:
      port: 8080
      targetPort: 8080
      protocol: TCP
    p2p:
      port: 8333
      targetPort: 8333
      protocol: TCP
    gateway:
      port: 8334
      targetPort: 8334
      protocol: TCP
    metrics:
      port: 9090
      targetPort: 9090
      protocol: TCP

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/websocket-services: "bitcraps"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  hosts:
    - host: api.bitcraps.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: bitcraps-tls
      hosts:
        - api.bitcraps.io

# Resource limits
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Node selector
nodeSelector:
  kubernetes.io/os: linux

# Tolerations
tolerations: []

# Affinity rules for pod distribution
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - bitcraps
        topologyKey: kubernetes.io/hostname

# Persistence configuration
persistence:
  enabled: true
  storageClass: fast-ssd
  accessMode: ReadWriteOnce
  size: 100Gi
  mountPath: /var/lib/bitcraps

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Configuration
config:
  logLevel: info
  meshNetwork:
    maxPeers: 100
    discoveryInterval: 30
    heartbeatInterval: 15
  consensus:
    blockTime: 5
    validatorCount: 21
  database:
    walMode: true
    checkpointInterval: 300
    maxConnections: 20
  security:
    tlsEnabled: true
    enforceEncryption: true

# External database (optional)
postgresql:
  enabled: false
  auth:
    postgresPassword: changeme
    database: bitcraps
  primary:
    persistence:
      enabled: true
      size: 50Gi

# Redis cache (optional)
redis:
  enabled: false
  auth:
    enabled: true
    password: changeme
  master:
    persistence:
      enabled: true
      size: 10Gi

# Monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      path: /metrics
  grafana:
    enabled: true
    adminPassword: changeme
    dashboards:
      enabled: true

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: 30  # Days
  destination:
    type: s3  # s3, gcs, azure
    bucket: bitcraps-backups
    region: us-west-2
    credentials:
      secretName: backup-credentials

# Network policies
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: bitcraps
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: bitcraps
      ports:
      - protocol: TCP
        port: 8333
  egress:
    - to:
      - namespaceSelector: {}
      ports:
      - protocol: TCP
        port: 53  # DNS
      - protocol: UDP
        port: 53  # DNS
    - to:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: bitcraps
      ports:
      - protocol: TCP
        port: 8333

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Secrets management
secrets:
  provider: kubernetes  # kubernetes, vault, aws-secrets-manager
  externalSecrets:
    enabled: false
    backend: vault
    vaultServer: https://vault.bitcraps.io
    path: secret/data/bitcraps

# Environment variables
env:
  - name: RUST_LOG
    value: "info"
  - name: BITCRAPS_ENV
    value: "production"
  - name: BITCRAPS_DATA_DIR
    value: "/var/lib/bitcraps"

# Additional volumes and mounts
extraVolumes: []
extraVolumeMounts: []

# Sidecar containers
sidecars: []

# Init containers
initContainers: []