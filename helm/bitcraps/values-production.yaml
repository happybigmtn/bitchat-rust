# Production Values for BitCraps Helm Chart

# Production deployment configuration
replicaCount: 5
image:
  repository: ghcr.io/bitcraps/bitchat-rust
  pullPolicy: IfNotPresent
  tag: "v0.1.0"

# Production service account with IRSA
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/bitcraps-production-role"

# Enhanced security context for production
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault

# Production service configuration
service:
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
  ports:
    http:
      port: 8080
      targetPort: 8080
      protocol: TCP
    p2p:
      port: 8334
      targetPort: 8334
      protocol: TCP
    gateway:
      port: 8335
      targetPort: 8335
      protocol: TCP
    metrics:
      port: 9091
      targetPort: 9091
      protocol: TCP

# Production ingress with WAF
ingress:
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    alb.ingress.kubernetes.io/wafv2-acl-arn: "arn:aws:wafv2:us-west-2:ACCOUNT_ID:regional/webacl/bitcraps-production/ID"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-west-2:ACCOUNT_ID:certificate/CERT_ID"
  hosts:
    - host: api.bitcraps.io
      paths:
        - path: /
          pathType: Prefix
    - host: gateway.bitcraps.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: bitcraps-production-tls
      hosts:
        - api.bitcraps.io
        - gateway.bitcraps.io

# Production resource allocation
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
    ephemeral-storage: 10Gi
  requests:
    cpu: 500m
    memory: 1Gi
    ephemeral-storage: 5Gi

# Production autoscaling
autoscaling:
  enabled: true
  minReplicas: 5
  maxReplicas: 50
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

# Production node selection
nodeSelector:
  kubernetes.io/os: linux
  node.kubernetes.io/instance-type: "m5.xlarge"
  bitcraps.io/node-pool: "production"

# Production tolerations
tolerations:
- key: "bitcraps.io/dedicated"
  operator: "Equal"
  value: "production"
  effect: "NoSchedule"

# Production persistence
persistence:
  enabled: true
  storageClass: gp3-encrypted
  accessMode: ReadWriteOnce
  size: 500Gi
  mountPath: /data

# Production health checks
livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /ready
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

startupProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

# Production configuration
config:
  logLevel: info
  environment: production
  meshNetwork:
    maxPeers: 1000
    discoveryInterval: 30
    heartbeatInterval: 15
    enableEncryption: true
  consensus:
    minParticipants: 5
    maxParticipants: 100
    proposalTimeout: 30
    votingTimeout: 15
    finalityThreshold: 0.67
    byzantineTolerance: 0.33
  database:
    url: "postgresql://bitcraps:${POSTGRES_PASSWORD}@bitcraps-postgresql:5432/bitcraps"
    maxConnections: 50
    walMode: true
    checkpointInterval: 60
  security:
    tlsEnabled: true
    enforceEncryption: true
    powDifficulty: 16
    enableRateLimiting: true
  monitoring:
    enableMetrics: true
    metricsPort: 9091
    enableTracing: true
    healthCheckInterval: 30

# Production PostgreSQL
postgresql:
  enabled: true
  auth:
    existingSecret: bitcraps-database-credentials
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
    username: bitcraps
    database: bitcraps
  primary:
    persistence:
      enabled: true
      size: 500Gi
      storageClass: gp3-high-performance
    resources:
      requests:
        memory: 4Gi
        cpu: 1000m
      limits:
        memory: 8Gi
        cpu: 2000m
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsNonRoot: true
  backup:
    enabled: true
    cronjob:
      schedule: "0 2 * * *"
      storage:
        size: 100Gi
        storageClass: gp3-encrypted

# Production Redis
redis:
  enabled: true
  auth:
    enabled: true
    existingSecret: bitcraps-redis-credentials
    existingSecretPasswordKey: password
  master:
    persistence:
      enabled: true
      size: 50Gi
      storageClass: gp3-encrypted
    resources:
      requests:
        memory: 512Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 500m
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 50Gi
      storageClass: gp3-encrypted

# Production monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 15s
      path: /metrics
  grafana:
    enabled: true
    adminUser: admin
    adminPasswordExistingSecret: bitcraps-grafana-credentials
    adminPasswordKey: password
    dashboards:
      enabled: true
    datasources:
      enabled: true

# Production backup
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: 90  # Days
  destination:
    type: s3
    bucket: bitcraps-production-backups
    region: us-west-2
    credentials:
      secretName: bitcraps-backup-credentials
  encryption:
    enabled: true
    secretName: bitcraps-backup-encryption

# Production network policies
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  additionalLabels:
    environment: production

# Production pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 3

# Production secrets management
secrets:
  provider: aws-secrets-manager
  externalSecrets:
    enabled: true
    backend: aws
    region: us-west-2
    secretsManagerRole: "arn:aws:iam::ACCOUNT_ID:role/bitcraps-secrets-manager"

# Production environment variables
env:
  - name: RUST_LOG
    value: "info"
  - name: BITCRAPS_ENV
    value: "production"
  - name: BITCRAPS_CONFIG
    value: "/etc/bitcraps/production.toml"
  - name: AWS_REGION
    value: "us-west-2"
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName

# Additional production configurations
extraLabels:
  environment: production
  tier: production
  compliance: "pci-dss"

# Custom metrics for production
customMetrics:
  - name: bitcraps_active_games
    type: gauge
    description: "Number of active games"
  - name: bitcraps_total_transactions
    type: counter
    description: "Total number of transactions processed"
  - name: bitcraps_consensus_latency
    type: histogram
    description: "Consensus decision latency"
