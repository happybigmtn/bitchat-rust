# BitCraps Production Configuration
# Optimized for high-performance production deployment

[app]
name = "BitCraps"
version = "0.1.0"
environment = "Production"
data_dir = "/data"
log_level = "info"
worker_threads = 16  # Increased for production
enable_tui = false
instance_id = "${POD_NAME:-bitcraps-prod}"
node_name = "${NODE_NAME:-unknown}"

[network]
listen_address = "0.0.0.0"
listen_port = 8334
max_connections = 10000  # Increased for production scale
connection_timeout = { secs = 30, nanos = 0 }
keepalive_interval = { secs = 30, nanos = 0 }  # More frequent keepalives
max_packet_size = 1048576  # 1MB for large game state updates
enable_bluetooth = true
enable_tcp = true
enable_compression = true
compression_level = 6  # Balanced compression
mtu_discovery = true
bind_to_device = false
reuse_port = true
tcp_nodelay = true

# Load balancing and failover
load_balancer_mode = true
health_check_port = 8080
metrics_port = 9091

# Rate limiting for DDoS protection
rate_limiting = {
  enabled = true,
  requests_per_minute = 10000,
  burst_size = 1000,
  cleanup_interval = { secs = 60, nanos = 0 }
}

[consensus]
min_participants = 5  # Higher minimum for production
max_participants = 1000  # Support large-scale games
proposal_timeout = { secs = 30, nanos = 0 }
voting_timeout = { secs = 15, nanos = 0 }
finality_threshold = 0.67
byzantine_tolerance = 0.33
enable_fast_path = true
checkpoint_interval = 1000
batch_size = 100  # Process multiple transactions together
max_pending_proposals = 1000

# Advanced consensus features
slashing_enabled = true
slashing_penalty = 0.1
reputation_system = true
witness_requirements = 3

[database]
url = "postgresql://bitcraps:${POSTGRES_PASSWORD}@bitcraps-postgresql:5432/bitcraps"
max_connections = 100  # Increased pool size
min_connections = 10
connection_timeout = { secs = 10, nanos = 0 }
idle_timeout = { secs = 300, nanos = 0 }
max_lifetime = { secs = 3600, nanos = 0 }
enable_wal = true
synchronous_commit = "on"  # Ensure durability
checkpoint_interval = { secs = 30, nanos = 0 }
backup_dir = "/data/backups"
backup_interval = { secs = 1800, nanos = 0 }  # Every 30 minutes

# Database optimization
vacuum_settings = {
  autovacuum = true,
  vacuum_cost_limit = 2000,
  vacuum_cost_delay = 10
}

# Read replica configuration
read_replica_url = "postgresql://bitcraps:${POSTGRES_PASSWORD}@bitcraps-postgresql-replica:5432/bitcraps"
read_write_split = true
read_preference = "replica"

[security]
pow_difficulty = 20  # Higher difficulty for production
key_rotation_interval = { secs = 43200, nanos = 0 }  # Every 12 hours
session_timeout = { secs = 3600, nanos = 0 }
max_session_count = 100000  # Support many concurrent sessions
enable_rate_limiting = true
rate_limit_requests = 10000
rate_limit_window = { secs = 60, nanos = 0 }
enable_tls = true
tls_version = "1.3"
cipher_suites = ["TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256"]

# Enhanced security features
enable_2fa = true
password_policy = {
  min_length = 12,
  require_uppercase = true,
  require_lowercase = true,
  require_numbers = true,
  require_symbols = true
}
brute_force_protection = {
  max_attempts = 5,
  lockout_duration = { secs = 900, nanos = 0 }  # 15 minutes
}

# Audit logging
audit_logging = {
  enabled = true,
  log_all_access = true,
  log_admin_actions = true,
  retention_days = 90
}

[monitoring]
enable_metrics = true
metrics_port = 9091
metrics_path = "/metrics"
enable_tracing = true
tracing_sample_rate = 0.1  # 10% sampling to reduce overhead
health_check_interval = { secs = 15, nanos = 0 }
log_retention_days = 30
metric_retention_days = 90

# Application Performance Monitoring
apm = {
  enabled = true,
  service_name = "bitcraps-production",
  environment = "production",
  sample_rate = 0.1
}

# Custom metrics
custom_metrics = {
  active_games = true,
  transaction_rate = true,
  consensus_latency = true,
  error_rates = true,
  resource_usage = true
}

[game]
min_bet = 1
max_bet = 100000  # Higher limits for production
max_players_per_game = 50  # Support larger games
game_timeout = { secs = 600, nanos = 0 }  # 10 minutes
auto_resolve_timeout = { secs = 120, nanos = 0 }
enable_side_bets = true
house_edge = 0.0136
max_concurrent_games = 10000  # Support many simultaneous games

# Game fairness and integrity
provably_fair = true
random_seed_sources = ["blockchain", "hardware", "atmospheric"]
game_state_verification = true
replay_system = true

[treasury]
initial_supply = 21000000000  # 21 billion tokens
treasury_address = "${TREASURY_ADDRESS}"
rake_percentage = 0.015  # 1.5% house rake
min_reserve = 10000000  # 10 million token minimum reserve
max_exposure = 100000000  # 100 million token maximum exposure
rebalance_interval = { secs = 1800, nanos = 0 }  # Every 30 minutes

# Advanced treasury management
risk_management = {
  max_bet_percentage = 0.01,  # Max 1% of treasury per bet
  volatility_adjustment = true,
  liquidity_buffer = 0.2  # 20% liquidity buffer
}

# Token economics
staking_rewards = {
  enabled = true,
  annual_rate = 0.05,  # 5% APY
  min_stake_period = { secs = 2592000, nanos = 0 }  # 30 days
}

[caching]
redis_url = "redis://:${REDIS_PASSWORD}@bitcraps-redis:6379/0"
max_connections = 100
connection_timeout = { secs = 5, nanos = 0 }
default_ttl = { secs = 3600, nanos = 0 }  # 1 hour

# Cache strategies
strategies = {
  game_state = { ttl = { secs = 300, nanos = 0 } },  # 5 minutes
  user_sessions = { ttl = { secs = 1800, nanos = 0 } },  # 30 minutes
  consensus_cache = { ttl = { secs = 60, nanos = 0 } },  # 1 minute
  leaderboards = { ttl = { secs = 600, nanos = 0 } }  # 10 minutes
}

[performance]
# Memory management
max_memory_usage = "4GB"
memory_pool_size = "1GB"
garbage_collection_threshold = 0.8

# Thread pool configuration
thread_pools = {
  consensus = 8,
  networking = 16,
  database = 4,
  background = 4
}

# Performance monitoring
performance_tracking = {
  enabled = true,
  sample_rate = 0.05,  # 5% sampling
  slow_query_threshold = { secs = 1, nanos = 0 }
}

[backup]
enable_continuous_backup = true
backup_schedule = "0 2 * * *"  # Daily at 2 AM
incremental_interval = { secs = 3600, nanos = 0 }  # Hourly incrementals
retention_policy = {
  daily = 30,   # Keep 30 daily backups
  weekly = 12,  # Keep 12 weekly backups
  monthly = 12  # Keep 12 monthly backups
}

# Backup destinations
backup_destinations = [
  {
    type = "s3",
    bucket = "bitcraps-production-backups",
    encryption = true
  },
  {
    type = "gcs",
    bucket = "bitcraps-backup-secondary",
    encryption = true
  }
]

[compliance]
# GDPR compliance
gdpr = {
  enabled = true,
  data_retention_days = 2555,  # 7 years
  anonymization_delay = { secs = 86400, nanos = 0 },  # 24 hours
  audit_trail = true
}

# Financial regulations
kyc_aml = {
  enabled = true,
  verification_required = true,
  transaction_limits = {
    daily = 50000,
    monthly = 1000000
  }
}

# Gaming regulations
gaming_compliance = {
  jurisdiction = "malta",
  license_number = "MGA/CL1/123/2024",
  responsible_gaming = true,
  age_verification = true
}

[alerting]
# Critical alerts
critical_alerts = {
  consensus_failure = true,
  database_connection_loss = true,
  high_error_rate = true,
  security_breach_attempt = true
}

# Alert destinations
slack_webhook = "${SLACK_WEBHOOK_URL}"
email_alerts = ["ops@bitcraps.io", "security@bitcraps.io"]
sms_alerts = ["+1-555-0123", "+1-555-0124"]

# Alert thresholds
thresholds = {
  error_rate = 0.05,  # 5% error rate
  response_time_p99 = { secs = 2, nanos = 0 },  # 2 second p99
  cpu_usage = 0.8,  # 80% CPU usage
  memory_usage = 0.9,  # 90% memory usage
  disk_usage = 0.85  # 85% disk usage
}

[feature_flags]
# Production feature toggles
features = {
  new_consensus_algorithm = false,  # Keep stable in production
  advanced_betting_options = true,
  social_features = true,
  mobile_push_notifications = true,
  realtime_analytics = true,
  automated_tournaments = true
}

# A/B testing
ab_testing = {
  enabled = true,
  default_allocation = 0.95,  # 95% to control group
  test_allocation = 0.05  # 5% to test group
}
