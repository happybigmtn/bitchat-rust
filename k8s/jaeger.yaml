---
apiVersion: v1
kind: Namespace
metadata:
  name: tracing
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: tracing
  labels:
    app: jaeger
    component: all-in-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      component: all-in-one
  template:
    metadata:
      labels:
        app: jaeger
        component: all-in-one
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.48
        ports:
        - containerPort: 5775
          protocol: UDP
          name: zipkin-compact
        - containerPort: 6831
          protocol: UDP
          name: jaeger-compact
        - containerPort: 6832
          protocol: UDP
          name: jaeger-binary
        - containerPort: 5778
          protocol: TCP
          name: config
        - containerPort: 16686
          protocol: TCP
          name: query
        - containerPort: 14268
          protocol: TCP
          name: jaeger-thrift
        - containerPort: 14250
          protocol: TCP
          name: grpc
        - containerPort: 9411
          protocol: TCP
          name: zipkin
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: "memory"
        - name: MEMORY_MAX_TRACES
          value: "10000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: "/"
            port: 14269
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: "/"
            port: 14269
          initialDelaySeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: tracing
  labels:
    app: jaeger
    component: query
spec:
  type: ClusterIP
  ports:
  - port: 16686
    targetPort: 16686
    protocol: TCP
    name: query
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: tracing
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
  - port: 14268
    targetPort: 14268
    protocol: TCP
    name: jaeger-thrift
  - port: 14250
    targetPort: 14250
    protocol: TCP
    name: grpc
  - port: 9411
    targetPort: 9411
    protocol: TCP
    name: zipkin
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: tracing
  labels:
    app: jaeger
    component: agent
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for agent discovery
  ports:
  - port: 5775
    targetPort: 5775
    protocol: UDP
    name: zipkin-compact
  - port: 6831
    targetPort: 6831
    protocol: UDP
    name: jaeger-compact
  - port: 6832
    targetPort: 6832
    protocol: UDP
    name: jaeger-binary
  - port: 5778
    targetPort: 5778
    protocol: TCP
    name: config
  selector:
    app: jaeger
    component: all-in-one
---
# Production Jaeger with Elasticsearch backend
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: tracing
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_binary:
            endpoint: 0.0.0.0:6832
          thrift_compact:
            endpoint: 0.0.0.0:6831
          thrift_http:
            endpoint: 0.0.0.0:14268
    
    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      memory_limiter:
        check_interval: 1s
        limit_mib: 512
      resource:
        attributes:
          - key: service.name
            value: bitcraps
            action: upsert
    
    exporters:
      elasticsearch:
        endpoints:
          - http://elasticsearch:9200
        index: jaeger-span
        
    service:
      pipelines:
        traces:
          receivers: [otlp, jaeger]
          processors: [memory_limiter, batch, resource]
          exporters: [elasticsearch]
---
# Production Jaeger Deployment with Elasticsearch
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jaeger-production
  namespace: tracing
  labels:
    app: jaeger-production
spec:
  serviceName: jaeger-production
  replicas: 3
  selector:
    matchLabels:
      app: jaeger-production
  template:
    metadata:
      labels:
        app: jaeger-production
    spec:
      containers:
      - name: jaeger-collector
        image: jaegertracing/jaeger-collector:1.48
        ports:
        - containerPort: 14250
          name: grpc
        - containerPort: 14268
          name: thrift-http
        - containerPort: 9411
          name: zipkin
        env:
        - name: SPAN_STORAGE_TYPE
          value: elasticsearch
        - name: ES_SERVER_URLS
          value: http://elasticsearch:9200
        - name: ES_INDEX_PREFIX
          value: jaeger
        - name: ES_TAGS_AS_FIELDS_ALL
          value: "true"
        - name: ES_NUM_SHARDS
          value: "3"
        - name: ES_NUM_REPLICAS
          value: "2"
        - name: COLLECTOR_QUEUE_SIZE
          value: "5000"
        - name: COLLECTOR_NUM_WORKERS
          value: "10"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /etc/jaeger
          readOnly: true
      - name: jaeger-query
        image: jaegertracing/jaeger-query:1.48
        ports:
        - containerPort: 16686
          name: query
        - containerPort: 16687
          name: health
        env:
        - name: SPAN_STORAGE_TYPE
          value: elasticsearch
        - name: ES_SERVER_URLS
          value: http://elasticsearch:9200
        - name: ES_INDEX_PREFIX
          value: jaeger
        - name: QUERY_BASE_PATH
          value: /jaeger
        - name: QUERY_MAX_CLOCK_SKEW_ADJUSTMENT
          value: 30s
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: config
        configMap:
          name: jaeger-config
---
# Ingress for Jaeger UI
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ingress
  namespace: tracing
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: jaeger-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Jaeger"
spec:
  tls:
  - hosts:
    - jaeger.bitcraps.io
    secretName: jaeger-tls
  rules:
  - host: jaeger.bitcraps.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686