apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitcraps-consensus
  namespace: bitcraps
  labels:
    app.kubernetes.io/name: bitcraps
    app.kubernetes.io/component: consensus
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: kubernetes
spec:
  replicas: 3  # Minimum for Byzantine fault tolerance (3f+1, where f=1)
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0  # Never allow consensus to be unavailable
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bitcraps
      app.kubernetes.io/component: consensus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bitcraps
        app.kubernetes.io/component: consensus
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9090"
        config.linkerd.io/proxy-cpu-request: "100m"
        config.linkerd.io/proxy-memory-request: "128Mi"
    spec:
      serviceAccountName: bitcraps-consensus
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      imagePullSecrets:
        - name: bitcraps-registry-secret
      containers:
      - name: consensus
        image: bitcraps/consensus:0.1.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        ports:
        - name: raft
          containerPort: 8001
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info,bitcraps::consensus=debug"
        - name: RUST_BACKTRACE
          value: "1"
        - name: CONSENSUS_PORT
          value: "8001"
        - name: METRICS_PORT
          value: "9090"
        - name: HEALTH_PORT
          value: "8080"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_ID
          value: "$(POD_NAME)"
        - name: CLUSTER_PEERS
          value: "bitcraps-consensus-0.bitcraps-consensus-headless:8001,bitcraps-consensus-1.bitcraps-consensus-headless:8001,bitcraps-consensus-2.bitcraps-consensus-headless:8001"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: db-host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: db-port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: db-name
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: db-password
        - name: MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: master-key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: encryption-key
        - name: SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: bitcraps-app-secrets
              key: signing-key
        volumeMounts:
        - name: config
          mountPath: /etc/bitcraps
          readOnly: true
        - name: data
          mountPath: /var/lib/bitcraps
        - name: raft-data
          mountPath: /var/lib/bitcraps/raft
        - name: logs
          mountPath: /var/log/bitcraps
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 60  # Consensus takes longer to start
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        resources:
          requests:
            cpu: 1
            memory: 2Gi
            ephemeral-storage: 2Gi
          limits:
            cpu: 4
            memory: 8Gi
            ephemeral-storage: 10Gi
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 30"]  # Allow consensus to gracefully step down
      volumes:
      - name: config
        configMap:
          name: bitcraps-app-config
          defaultMode: 0444
      - name: data
        persistentVolumeClaim:
          claimName: bitcraps-consensus-data
      - name: raft-data
        persistentVolumeClaim:
          claimName: bitcraps-raft-data
      - name: logs
        emptyDir:
          sizeLimit: 2Gi
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      terminationGracePeriodSeconds: 60  # Allow time for consensus transition
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:  # Hard requirement for consensus
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: bitcraps
                app.kubernetes.io/component: consensus
            topologyKey: kubernetes.io/hostname
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bitcraps-consensus
  namespace: bitcraps
  labels:
    app.kubernetes.io/name: bitcraps
    app.kubernetes.io/component: consensus
  annotations:
    description: "Service account for BitCraps consensus service"
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: bitcraps-consensus
  namespace: bitcraps
  labels:
    app.kubernetes.io/name: bitcraps
    app.kubernetes.io/component: consensus
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bitcraps-consensus
  namespace: bitcraps
  labels:
    app.kubernetes.io/name: bitcraps
    app.kubernetes.io/component: consensus
subjects:
- kind: ServiceAccount
  name: bitcraps-consensus
  namespace: bitcraps
roleRef:
  kind: Role
  name: bitcraps-consensus
  apiGroup: rbac.authorization.k8s.io