apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitcraps-ingress
  namespace: bitcraps
  labels:
    app.kubernetes.io/name: bitcraps
    app.kubernetes.io/component: ingress
    app.kubernetes.io/version: "0.1.0"
  annotations:
    # NGINX Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-rps: "100"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # CORS
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "ewma"
    
spec:
  tls:
  - hosts:
    - api.bitcraps.io
    - monitoring.bitcraps.io
    - grafana.bitcraps.io
    secretName: bitcraps-tls-cert
  rules:
  - host: api.bitcraps.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bitcraps-api-gateway
            port:
              number: 8080
      - path: /api/v1/games
        pathType: Prefix
        backend:
          service:
            name: bitcraps-game-engine
            port:
              number: 8000
      - path: /api/v1/consensus
        pathType: Prefix
        backend:
          service:
            name: bitcraps-consensus
            port:
              number: 8001
      - path: /health
        pathType: Exact
        backend:
          service:
            name: bitcraps-api-gateway
            port:
              number: 8081
              
  - host: monitoring.bitcraps.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bitcraps-monitoring
            port:
              number: 9090
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: bitcraps-monitoring
            port:
              number: 9090
              
  - host: grafana.bitcraps.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bitcraps-monitoring
            port:
              number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitcraps-websocket-ingress
  namespace: bitcraps
  labels:
    app.kubernetes.io/name: bitcraps
    app.kubernetes.io/component: websocket-ingress
    app.kubernetes.io/version: "0.1.0"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # WebSocket specific configuration
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "bitcraps-game-engine"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
      
    # Sticky sessions for WebSocket connections
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "bitcraps-ws-session"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
spec:
  tls:
  - hosts:
    - ws.bitcraps.io
    secretName: bitcraps-ws-tls-cert
  rules:
  - host: ws.bitcraps.io
    http:
      paths:
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: bitcraps-game-engine
            port:
              number: 8000
      - path: /ws/consensus
        pathType: Prefix
        backend:
          service:
            name: bitcraps-consensus
            port:
              number: 8001

---
# Internal ingress for monitoring and admin interfaces
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitcraps-internal-ingress
  namespace: bitcraps
  labels:
    app.kubernetes.io/name: bitcraps
    app.kubernetes.io/component: internal-ingress
    app.kubernetes.io/version: "0.1.0"
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/rewrite-target: /
    
    # IP whitelist for internal access
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    # Basic auth for additional security
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: bitcraps-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "BitCraps Internal Access"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
spec:
  tls:
  - hosts:
    - admin.bitcraps.internal
    - prometheus.bitcraps.internal
    - grafana.bitcraps.internal
    secretName: bitcraps-internal-tls-cert
  rules:
  - host: admin.bitcraps.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bitcraps-api-gateway
            port:
              number: 8080
              
  - host: prometheus.bitcraps.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bitcraps-monitoring
            port:
              number: 9090
              
  - host: grafana.bitcraps.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bitcraps-monitoring
            port:
              number: 3000