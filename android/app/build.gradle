plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.bitcraps.app'
    compileSdk 34

    defaultConfig {
        applicationId "com.bitcraps.app"
        minSdk 24  // Android 7.0 for better BLE support
        targetSdk 34  // Android 14
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Native library configuration
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
        
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++14'
                arguments '-DANDROID_STL=c++_shared'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Keep native library symbols for debugging
            debuggable false
            jniDebuggable false
        }
        debug {
            debuggable true
            jniDebuggable true
            applicationIdSuffix '.debug'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.8'
    }

    // Native build configuration
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    
    // Copy Rust library
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    
    // Android 14 specific configurations
    compileSdkPreview 'UpsideDownCake'
    
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.5'
    
    // Foreground Service support
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
    
    // BLE specific libraries
    implementation 'no.nordicsemi.android:ble:2.6.1'
    implementation 'no.nordicsemi.android.support.v18:scanner:1.6.0'
    
    // Permissions handling
    implementation 'com.karumi:dexter:6.2.3'
    
    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'
    
    // JSON parsing
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Reactive programming
    implementation 'io.reactivex.rxjava3:rxjava:3.1.6'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    
    // Jetpack Compose BOM
    implementation platform('androidx.compose:compose-bom:2024.02.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    
    // Compose Activity & ViewModel
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    
    // Animation
    implementation 'androidx.compose.animation:animation:1.5.8'
    implementation 'androidx.compose.animation:animation-graphics:1.5.8'
    
    // Performance monitoring
    implementation 'androidx.compose.runtime:runtime-tracing:1.0.0-alpha03'
    
    // Compose UI testing
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
}

// Task to build Rust library
task buildRustLib(type: Exec) {
    description = 'Build the Rust library for Android'
    
    // Set environment for cross-compilation
    environment 'CC_aarch64_linux_android', "${android.ndkDirectory}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang"
    environment 'CC_armv7_linux_androideabi', "${android.ndkDirectory}/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang"
    environment 'CC_x86_64_linux_android', "${android.ndkDirectory}/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android24-clang"
    environment 'CC_i686_linux_android', "${android.ndkDirectory}/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android24-clang"
    
    workingDir '../../'  // Root of Rust project
    
    commandLine 'cargo', 'build', '--release', '--target', 'aarch64-linux-android'
}

// Task to copy Rust libraries to Android project
task copyRustLibs(type: Copy, dependsOn: buildRustLib) {
    description = 'Copy Rust libraries to Android jniLibs'
    
    from '../../target/aarch64-linux-android/release/'
    into 'src/main/jniLibs/arm64-v8a'
    include 'libbitcraps.so'
    
    // TODO: Add other architectures when cross-compilation is set up
}

// Make sure Rust library is built before Android build
preBuild.dependsOn copyRustLibs