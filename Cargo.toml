[package]
name = "bitcraps"
version = "0.1.0"
edition = "2021"
authors = ["BitCraps Team <dev@bitcraps.org>"]
description = "Decentralized craps casino over Bluetooth mesh with CRAP tokens"
license = "MIT OR Apache-2.0"

[dependencies]
# Core dependencies
thiserror = "2.0.16"
serde = { version = "1.0", features = ["derive", "rc"] }
bytes = "1.5"
byteorder = "1.5"
humantime-serde = "1.1"
lz4_flex = "0.11"
uuid = { version = "1.6", features = ["v4", "serde"] }
tokio = { version = "1.47", features = ["rt-multi-thread", "net", "time", "sync", "macros"], default-features = false }
async-trait = "0.1"
futures = "0.3"
crossbeam-channel = "0.5"
crossbeam-skiplist = "0.1"
dashmap = "6.1"
arc-swap = "1.7"

# Cryptography
snow = "0.10.0"
ed25519-dalek = { version = "2.0", features = ["rand_core"] }
x25519-dalek = "2.0"
rand = "0.8"
getrandom = "0.2"
fastrand = "2.0"
sha2 = "0.10"
argon2 = "0.5.3"
chacha20poly1305 = "0.10.1"
aes-gcm = "0.10.3"
hmac = "0.12"
pbkdf2 = "0.12"
hkdf = "0.12"
zeroize = { version = "1.3", features = ["derive"] }
subtle = "2.6"

# HSM and Hardware Security Module support
pkcs11 = { version = "0.5", optional = true }
yubico = { version = "0.7", optional = true }
constant_time_eq = "0.3"

# GPU acceleration (optional features)
wgpu = { version = "0.19", optional = true }
bytemuck = { version = "1.14", optional = true }
pollster = { version = "0.3", optional = true }

# Bluetooth transport
btleplug = { version = "0.11", optional = true, default-features = false }
once_cell = "1.20"

# UniFFI for cross-platform bindings
uniffi = { version = "0.28", features = ["build"], optional = true }

# Android JNI bindings
jni = { version = "0.21", optional = true }
android_logger = { version = "0.14", optional = true }

# Database and storage
rusqlite = { version = "0.32", features = ["bundled", "backup"], optional = true, default-features = false }
tokio-postgres = { version = "0.7", optional = true }
deadpool-postgres = { version = "0.14", optional = true }
sea-orm = { version = "1.0", features = ["sqlx-postgres", "runtime-tokio-rustls", "macros"], optional = true }
# sqlx = { version = "0.7", features = ["postgres", "runtime-tokio-rustls", "migrate", "uuid", "chrono", "json"], optional = true }
bb8 = { version = "0.8", optional = true }
bb8-postgres = { version = "0.8", optional = true }
r2d2 = { version = "0.8", optional = true }
r2d2_postgres = { version = "0.18", optional = true }
postgres-types = { version = "0.2", optional = true }
refinery = { version = "0.8", features = ["tokio-postgres"], optional = true }

# System monitoring
sysinfo = { version = "0.29", optional = true, default-features = false }
procfs = { version = "0.16", optional = true }
tokio-rusqlite = "0.6"

# Efficient data structures
rustc-hash = "2.0"
lru = "0.12"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }
bitvec = "1.0"
memmap2 = "0.9"

# Concurrency and parallelism
crossbeam-epoch = "0.9"
parking_lot = "0.12"
rayon = "1.10"

# Compression
flate2 = "1.0"
zstd = "0.13"
brotli = "7.0"

# UI dependencies (optional)
ratatui = { version = "0.29.0", optional = true, default-features = false, features = ["crossterm"] }
crossterm = { version = "0.29.0", optional = true, default-features = false, features = ["events"] }
clap = { version = "4.5.45", features = ["derive", "cargo"] }

# TLS support
rustls = { version = "0.21", optional = true }
tokio-rustls = { version = "0.24", optional = true }

# Utilities
dirs = "5.0"
log = "0.4"
regex = "1.11"
chrono = { version = "0.4.41", features = ["serde", "clock"] }
lazy_static = "1.5"
hex = "0.4"
bincode = "1.3"
serde_json = "1.0"
toml = "0.8"
tempfile = "3.8"

# Economics and smart contracts
ethers = { version = "2.0", optional = true }     # Ethereum integration  
web3 = { version = "0.19", optional = true }       # Alternative Ethereum client
bitcoin = { version = "0.32", optional = true }     # Bitcoin integration
rust_decimal = "1.33"                              # High precision decimal math
rust_decimal_macros = "1.33"                       # Decimal macros
num_cpus = "1.16"
serde_bytes = "0.11"
blake3 = "1.5"
crc32fast = "1.4"
rand_chacha = "0.3"
env_logger = "0.11"
warp = "0.3"
prometheus = "0.14.0"
reqwest = { version = "0.12.23", features = ["json"] }
url = "2.5"
tokio-tungstenite = { version = "0.21", optional = true }

# Compliance and governance dependencies
edit-distance = "2.1"  # For fuzzy string matching in sanctions screening

# Edge computing dependencies (using existing dependencies where possible)

# WebAssembly and browser integration
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", features = ["console", "Window", "Document", "Navigator", "Location", "RtcPeerConnection"], optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
wasm-logger = { version = "0.2", optional = true }
wasmtime = { version = "15.0", optional = true }

# Microservices architecture dependencies
axum = { version = "0.7", features = ["ws"] }
tower = { version = "0.5", features = ["full"] }
tower-http = { version = "0.6", features = ["cors", "trace", "timeout"] }
tonic = "0.12"
hyper = { version = "1.0", features = ["full"] }
http = "1.3.1"
futures-util = "0.3"

[build-dependencies]
uniffi = { version = "0.28", features = ["build"], optional = true }
vergen = { version = "8", default-features = false, features = ["build", "git", "gitcl", "rustc"] }

# Android JNI integration
[target.'cfg(target_os = "android")'.dependencies]
jni = { version = "0.21", features = ["invocation"] }
android_logger = "0.14"
ndk = "0.8"
ndk-context = "0.1"

# Linux D-Bus integration for BlueZ
[target.'cfg(target_os = "linux")'.dependencies]
zbus = { version = "4.0", features = ["tokio"] }
futures-util = "0.3"
procfs = "0.16"

# iOS/macOS Core Bluetooth FFI (when available)
[target.'cfg(any(target_os = "ios", target_os = "macos"))'.dependencies]
core-foundation = "0.9"
core-foundation-sys = "0.8"
objc = "0.2"
cocoa = "0.25"

# Windows system monitoring
[target.'cfg(target_os = "windows")'.dependencies]
# Windows Performance Data Helper (PDH) for system metrics
winapi = { version = "0.3", features = ["pdh", "sysinfoapi", "winbase", "winuser", "bluetoothapis"] }
windows = { version = "0.52", features = ["Win32_Devices_Bluetooth", "Win32_Foundation", "Win32_System_Com"] }


[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
futures = "0.3"
tempfile = "3.14"
tokio-test = "0.4"
proptest = "1.5"
arbitrary = { version = "1.3", features = ["derive"] }

[[bench]]
name = "performance"
harness = false

[[bench]]
name = "comprehensive_benchmarks"
harness = false

[[bench]]
name = "working_benchmarks"
harness = false

[[bench]]
name = "real_performance_benchmarks"
harness = false

# Android library configuration
[lib]
name = "bitcraps"
crate-type = ["cdylib", "staticlib", "rlib"]

# Android targets
[package.metadata.android]
package_name = "com.bitcraps.lib"
lib_name = "bitcraps"

[profile.release]
lto = true
codegen-units = 1
strip = true
opt-level = 3

[features]
# Default build is minimal - only core consensus and basic networking
default = []

# Core feature set - everything needed for basic functionality
core = ["bluetooth", "sqlite", "consensus", "monitoring", "ui"]

# Full feature set - everything enabled
full = ["core", "nat-traversal", "tls", "postgres", "android", "gpu", "wasm"]

# Core components
consensus = []  # Core consensus protocols

# Test-gating features
mvp = []                # Enable MVP-focused tests
legacy-tests = []       # Enable legacy, comprehensive integration tests (off by default)
legacy-examples = []    # Enable legacy examples (off by default)

benchmarks = []
physical_device_tests = []
bluetooth = ["dep:btleplug"] # Core Bluetooth LE mesh transport
ui = ["dep:ratatui", "dep:crossterm"] # Terminal UI support
monitoring = ["dep:sysinfo"] # System monitoring
nat-traversal = [] # STUN/TURN NAT traversal support
upnp = [] # UPnP port mapping support

# Blockchain integration features
ethereum = ["dep:ethers"]       # Ethereum blockchain support via ethers
web3 = ["dep:web3"]            # Alternative Ethereum client via web3
bitcoin = ["dep:bitcoin"]       # Bitcoin blockchain support
# Cross-chain bridge features
bridges = ["ethereum", "bitcoin", "web3"]  # Enable all bridge implementations
bridge-ethereum = ["ethereum"]             # Ethereum bridge only
bridge-bitcoin = ["bitcoin"]               # Bitcoin bridge only
bridge-universal = ["bridges"]             # Universal bridge with IBC support

# Hardware Security Module features
hsm = ["dep:pkcs11"]           # PKCS#11 HSM support
yubikey = ["dep:yubico"]       # YubiKey HSM support

# GPU acceleration features
gpu = ["wgpu-gpu"]             # Enable GPU acceleration via WebGPU
wgpu-gpu = ["dep:wgpu", "dep:bytemuck", "dep:pollster"]  # WebGPU cross-platform compute

uniffi = ["dep:uniffi"]
android = ["dep:jni", "dep:android_logger", "bluetooth"]
tls = ["dep:rustls", "dep:tokio-rustls"]

# Database backend features
postgres = [
    "dep:tokio-postgres", 
    "dep:deadpool-postgres", 
    # "dep:sqlx", 
    "dep:sea-orm", 
    "dep:bb8", 
    "dep:bb8-postgres",
    "dep:r2d2",
    "dep:r2d2_postgres", 
    "dep:postgres-types",
    "dep:refinery"
]
sqlite = ["rusqlite"]
database-migrations = ["dep:refinery"]

# WebRTC and WASM features
webrtc = ["dep:tokio-tungstenite"]
wasm = [
    "dep:wasm-bindgen", 
    "dep:wasm-bindgen-futures", 
    "dep:js-sys", 
    "dep:web-sys", 
    "dep:console_error_panic_hook", 
    "dep:wasm-logger"
]
wasm-runtime = ["dep:wasmtime"]
browser = ["wasm", "webrtc"]

# Edge computing features
edge-computing = []  # Enable edge computing infrastructure
cdn-integration = [] # Enable CDN provider integrations
mec-5g = []         # Enable 5G MEC support
edge-cache = []     # Enable advanced edge caching

# Additional missing features
compliance = []     # Compliance and regulatory features
governance = []     # Governance and DAO features
plugins = []        # Plugin system features
services = []       # Microservices features
optimization = []   # Performance optimization features
profiling = []      # Performance profiling features

# Explicit test targets with feature gating
[[test]]
name = "mvp_tcp_e2e"
path = "tests/mvp_tcp_e2e.rs"
required-features = ["mvp"]

[[test]]
name = "mvp_game_discovery"
path = "tests/mvp_game_discovery.rs"
required-features = ["mvp"]

[[test]]
name = "adversarial_consensus_test"
path = "tests/adversarial_consensus_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "basic_end_to_end_tests"
path = "tests/basic_end_to_end_tests.rs"
required-features = ["legacy-tests"]

[[test]]
name = "comprehensive_integration_audit_test"
path = "tests/comprehensive_integration_audit_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "comprehensive_integration_test"
path = "tests/comprehensive_integration_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "comprehensive_p2p_game_flow_test"
path = "tests/comprehensive_p2p_game_flow_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "concurrent_player_joins_test"
path = "tests/concurrent_player_joins_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "consensus_test"
path = "tests/consensus_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "cross_platform_tests"
path = "tests/cross_platform_tests.rs"
required-features = ["legacy-tests"]

[[test]]
name = "database_comprehensive_test"
path = "tests/database_comprehensive_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "database_integration_test"
path = "tests/database_integration_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "end_to_end_tests"
path = "tests/end_to_end_tests.rs"
required-features = ["legacy-tests"]

[[test]]
name = "integration_comprehensive"
path = "tests/integration_comprehensive.rs"
required-features = ["legacy-tests"]

[[test]]
name = "integration_test"
path = "tests/integration_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "mobile_security_integration_test"
path = "tests/mobile_security_integration_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "mobile_security_simple_test"
path = "tests/mobile_security_simple_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "multi_peer_integration"
path = "tests/multi_peer_integration.rs"
required-features = ["legacy-tests"]

[[test]]
name = "p2p_consensus_integration_test"
path = "tests/p2p_consensus_integration_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "peer_id_exchange_test"
path = "tests/peer_id_exchange_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "performance_audit"
path = "tests/performance_audit.rs"
required-features = ["legacy-tests"]

[[test]]
name = "smoke_test"
path = "tests/smoke_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "token_economics_comprehensive_test"
path = "tests/token_economics_comprehensive_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "transport_security_comprehensive_test"
path = "tests/transport_security_comprehensive_test.rs"
required-features = ["legacy-tests"]

[[test]]
name = "transport_security_tests"
path = "tests/transport_security_tests.rs"
required-features = ["legacy-tests"]

# Examples gated behind legacy-examples
[[example]]
name = "anti_cheat_demo"
required-features = ["legacy-examples"]

[[example]]
name = "basic_consensus"
required-features = ["legacy-examples"]

[[example]]
name = "battery_optimization_demo"
required-features = ["legacy-examples"]

[[example]]
name = "ble_peripheral_demo"
required-features = ["legacy-examples"]

[[example]]
name = "cross_layer_integration"
required-features = ["legacy-examples"]

[[example]]
name = "cross_layer_simple"
required-features = ["legacy-examples"]

[[example]]
name = "efficient_demo"
required-features = ["legacy-examples"]

[[example]]
name = "full_integration_demo"
required-features = ["legacy-examples"]

[[example]]
name = "full_integration_simple"
required-features = ["legacy-examples"]

[[example]]
name = "loop_budget_demo"
required-features = ["legacy-examples"]

[[example]]
name = "memory_comparison"
required-features = ["legacy-examples"]

[[example]]
name = "mesh_network"
required-features = ["legacy-examples"]

[[example]]
name = "mesh_network_simple"
required-features = ["legacy-examples"]

[[example]]
name = "mobile_sdk_example"
required-features = ["legacy-examples"]

[[example]]
name = "peer_discovery_demo"
required-features = ["legacy-examples"]

[[example]]
name = "sdk_quickstart"
required-features = ["legacy-examples"]

[[example]]
name = "system_monitoring_demo"
required-features = ["legacy-examples"]

[[example]]
name = "tui_demo"
required-features = ["legacy-examples"]

[profile.dev]
opt-level = 0
debug = true
